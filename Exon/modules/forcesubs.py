"""
MIT License

Copyright (c) 2022 A ô…™s ú…¥·¥è…™

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

import logging
import time

from pyrogram import filters
from pyrogram.errors.exceptions.bad_request_400 import (
    ChatAdminRequired,
    PeerIdInvalid,
    UsernameNotOccupied,
    UserNotParticipant,
)
from pyrogram.types import ChatPermissions, InlineKeyboardButton, InlineKeyboardMarkup

from Exon import BOT_USERNAME as asau
from Exon import DRAGONS as SUDO_USERS
from Exon import pgram as pbot
from Exon.modules.sql import forceSubscribe_sql as sql

logging.basicConfig(level=logging.INFO)

static_data_filter = filters.create(
    lambda _, __, query: query.data == "onUnMuteRequest"
)


@pbot.on_callback_query(static_data_filter)
def _onUnMuteRequest(client, cb):
    user_id = cb.from_user.id
    chat_id = cb.message.chat.id
    if chat_db := sql.fs_settings(chat_id):
        channel = chat_db.channel
        chat_member = client.get_chat_member(chat_id, user_id)
        if chat_member.restricted_by:
            if chat_member.restricted_by.id == (client.get_me()).id:
                try:
                    client.get_chat_member(channel, user_id)
                    client.unban_chat_member(chat_id, user_id)
                    cb.message.delete()
                    # if cb.message.reply_to_message.from_user.id == user_id:
                    # cb.message.delete()
                except UserNotParticipant:
                    client.answer_callback_query(
                        cb.id,
                        text=f"‚ùó ·¥ä·¥è…™…¥ ·¥è·¥ú Ä @{channel} ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥ò Ä·¥áss '·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á  ô·¥ú·¥õ·¥õ·¥è…¥.",
                        show_alert=True,
                    )
            else:
                client.answer_callback_query(
                    cb.id,
                    text="‚ùó  è·¥è·¥ú  ú·¥Ä·¥†·¥á  ô·¥á·¥á…¥ ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥Ä·¥Ö·¥ç…™…¥s ·¥Ö·¥ú·¥á ·¥õ·¥è s·¥è·¥ç·¥á ·¥è·¥õ ú·¥á Ä  Ä·¥á·¥Äs·¥è…¥.",
                    show_alert=True,
                )
        elif (
            client.get_chat_member(chat_id, (client.get_me()).id).status
            == "administrator"
        ):
            client.answer_callback_query(
                cb.id,
                text="‚ùó ·¥°·¥Ä Ä…¥…™…¥…¢! ·¥Ö·¥è…¥'·¥õ ·¥ò Ä·¥áss ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥ ·¥° ú·¥á…¥  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥õ·¥Ä ü·¥ã.",
                show_alert=True,
            )

        else:
            client.send_message(
                chat_id,
                f"‚ùó **{cb.from_user.mention} …™s ·¥õ Ä è…™…¥…¢ ·¥õ·¥è ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ú…™·¥ç/ ú·¥á Ä-s·¥á ü“ì  ô·¥ú·¥õ i ·¥Ñ·¥Ä…¥'·¥õ ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ú…™·¥ç/her  ô·¥á·¥Ñ·¥Ä·¥ús·¥á …™ ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥ ·¥Ä…¢·¥Ä…™…¥.\n",
            )


@pbot.on_message(filters.text & ~filters.private, group=1)
def _check_member(client, message):
    chat_id = message.chat.id
    if chat_db := sql.fs_settings(chat_id):
        user_id = message.from_user.id
        if (
            client.get_chat_member(chat_id, user_id).status
            not in ("administrator", "creator")
            and user_id not in SUDO_USERS
        ):
            channel = chat_db.channel
            try:
                client.get_chat_member(channel, user_id)
            except UserNotParticipant:
                try:
                    sent_message = message.reply_text(
                        f"·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á {message.from_user.mention} üôè \n ** è·¥è·¥ú  ú·¥Ä·¥†·¥á…¥'·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö ·¥è·¥ú Ä @{channel} ·¥Ñ ú·¥Ä…¥…¥·¥á ü  è·¥á·¥õ**üë∑ \n \n·¥ò ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ [our channel](https://t.me/{channel}) ·¥Ä…¥·¥Ö  ú…™·¥õ ·¥õ ú·¥á **·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á**  ô·¥ú·¥õ·¥õ·¥è…¥. \n \n ",
                        disable_web_page_preview=True,
                        reply_markup=InlineKeyboardMarkup(
                            [
                                [
                                    InlineKeyboardButton(
                                        "·¥ä·¥è…™…¥ ·¥Ñ ú·¥Ä…¥…¥·¥á ü",
                                        url=f"https://t.me/{channel}",
                                    )
                                ],
                                [
                                    InlineKeyboardButton(
                                        "·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á",
                                        callback_data="onUnMuteRequest",
                                    )
                                ],
                            ]
                        ),
                    )

                    client.restrict_chat_member(
                        chat_id, user_id, ChatPermissions(can_send_messages=False)
                    )
                except ChatAdminRequired:
                    sent_message.edit(
                        "üòï **…™ ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä·¥Ö·¥ç…™…¥  ú·¥á Ä·¥á..**\n__…¢…™·¥†·¥á ·¥ç·¥á  ô·¥Ä…¥ ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥s ·¥Ä…¥·¥Ö  Ä·¥á·¥õ Ä è.. \n#·¥á…¥·¥Ö…™…¥…¢ “ìs·¥ú ô...."
                    )

            except ChatAdminRequired:
                client.send_message(
                    chat_id,
                    text=f"üòï **I …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ ·¥è“ì @{channel} ·¥Ñ ú·¥Ä…¥…¥·¥á ü.**\n__…¢…™·¥†·¥á me ·¥Ä·¥Ö·¥ç…™…¥ ·¥è“ì ·¥õ ú·¥Ä·¥õ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö  Ä·¥á·¥õ Ä è.\n#·¥á…¥·¥Ö…™…¥…¢ “ìs·¥ú ô....",
                )


@pbot.on_message(filters.command(["forcesubscribe", "fsub"]) & ~filters.private)
def config(client, message):
    user = client.get_chat_member(message.chat.id, message.from_user.id)
    if user.status == "creator" or user.user.id in SUDO_USERS:
        chat_id = message.chat.id
        if len(message.command) > 1:
            input_str = message.command[1]
            input_str = input_str.replace("@", "")
            if input_str.lower() in ("off", "no", "disable"):
                sql.disapprove(chat_id)
                message.reply_text("‚ùå **“ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á …™s ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è.**")
            elif input_str.lower() in ("clear"):
                sent_message = message.reply_text(
                    "**·¥ú…¥·¥ç·¥ú·¥õ…™…¥…¢ ·¥Ä ü ü ·¥ç·¥á·¥ç ô·¥á Äs ·¥° ú·¥è ·¥Ä Ä·¥á ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥ç·¥á ...**"
                )
                try:
                    for chat_member in client.get_chat_members(
                        message.chat.id, filter="restricted"
                    ):
                        if chat_member.restricted_by.id == (client.get_me()).id:
                            client.unban_chat_member(chat_id, chat_member.user.id)
                            time.sleep(1)
                    sent_message.edit("‚úÖ **·¥ú…¥·¥ç·¥ú·¥õ·¥á·¥Ö ·¥Ä ü ü ·¥ç·¥á·¥ç ô·¥á Äs ·¥° ú·¥è ·¥Ä Ä·¥á ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥ç·¥á.**")
                except ChatAdminRequired:
                    sent_message.edit(
                        "üòï **I ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**\n__I ·¥Ñ·¥Ä…¥'·¥õ ·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥ç·¥á·¥ç ô·¥á Äs  ô·¥á·¥Ñ·¥Ä·¥ús·¥á i ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ ·¥ç·¥Ä·¥ã·¥á ·¥ç·¥á ·¥Ä·¥Ö·¥ç…™…¥ ·¥°…™·¥õ ú  ô·¥Ä…¥ ·¥ús·¥á Ä ·¥ò·¥á Ä·¥ç…™ss…™·¥è…¥.__"
                    )
            else:
                try:
                    client.get_chat_member(input_str, "me")
                    sql.add_channel(chat_id, input_str)
                    message.reply_text(
                        f"‚úÖ **“ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á …™s ·¥á…¥·¥Ä ô ü·¥á·¥Ö**\n__“ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á …™s ·¥á…¥·¥Ä ô ü·¥á·¥Ö, ·¥Ä ü ü ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò ·¥ç·¥á·¥ç ô·¥á Äs  ú·¥Ä·¥†·¥á ·¥õ·¥è s·¥ú ôs·¥Ñ Ä…™ ô·¥á ·¥õ ú…™s [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{input_str}) …™…¥ ·¥è Ä·¥Ö·¥á Ä ·¥õ·¥è s·¥á…¥·¥Ö ·¥ç·¥áss·¥Ä…¢·¥ás …™…¥ ·¥õ ú…™s group.",
                        disable_web_page_preview=True,
                    )
                except UserNotParticipant:
                    message.reply_text(
                        f"üòï **…¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü**\n__I ·¥Ä·¥ç …¥·¥è·¥õ ·¥Ä…¥ ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥õ ú·¥á [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{input_str}). ·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥Äs ·¥Ä ·¥Ä·¥Ö·¥ç…™…¥ …™…¥ ·¥è Ä·¥Ö·¥á Ä ·¥õ·¥è ·¥á…¥·¥Ä ô ü·¥á “ì·¥è Ä·¥Ñ·¥ás·¥ú ôs·¥Ñ Ä…™ ô·¥á.",
                        disable_web_page_preview=True,
                    )
                except (UsernameNotOccupied, PeerIdInvalid):
                    message.reply_text("‚ùó **…™…¥·¥†·¥Ä ü…™·¥Ö ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á.**")
                except Exception as err:
                    message.reply_text(f"‚ùó **·¥á Ä Ä·¥è Ä:** ```{err}```")
        elif sql.fs_settings(chat_id):
            message.reply_text(
                f"‚úÖ **“ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á …™s ·¥á…¥·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**\n__“ì·¥è Ä ·¥õ ú…™s [·¥Ñ ú·¥Ä…¥…¥·¥á ü](https://t.me/{sql.fs_settings(chat_id).channel})__",
                disable_web_page_preview=True,
            )
        else:
            message.reply_text("‚ùå **“ì·¥è Ä·¥Ñ·¥á s·¥ú ôs·¥Ñ Ä…™ ô·¥á …™s ·¥Ö…™s·¥Ä ô ü·¥á·¥Ö …™…¥ ·¥õ ú…™s ·¥Ñ ú·¥Ä·¥õ.**")
    else:
        message.reply_text(
            "‚ùó **…¢ Ä·¥è·¥ú·¥ò ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä  Ä·¥á«´·¥ú…™ Ä·¥á·¥Ö**\n__ è·¥è·¥ú  ú·¥Ä·¥†·¥á ·¥õ·¥è  ô·¥á ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä ·¥õ·¥è ·¥Ö·¥è ·¥õ ú·¥Ä·¥õ.__"
        )


__help__ = f"""
*“ì·¥è Ä·¥Ñ·¥á Íú±·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á:*

‚ùÇ *A ô…¢ ·¥Ñ·¥Ä…¥ ·¥ç·¥ú·¥õ·¥á ·¥ç·¥á·¥ç ô·¥á ÄÍú± ·¥° ú·¥è ·¥Ä Ä·¥á …¥·¥è·¥õ Íú±·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á·¥Ö  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ú…¥·¥õ…™ ü ·¥õ ú·¥á è Íú±·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á*

‚ùÇ `·¥° ú·¥á…¥ ·¥á…¥·¥Ä ô ü·¥á·¥Ö …™ ·¥°…™ ü ü ·¥ç·¥ú·¥õ·¥á ·¥ú…¥Íú±·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á·¥Ö ·¥ç·¥á·¥ç ô·¥á ÄÍú± ·¥Ä…¥·¥Ö Íú± ú·¥è·¥° ·¥õ ú·¥á·¥ç ·¥Ä ·¥ú…¥·¥ç·¥ú·¥õ·¥á  ô·¥ú·¥õ·¥õ·¥è…¥. ·¥° ú·¥á…¥ ·¥õ ú·¥á è ·¥ò Ä·¥áÍú±Íú±·¥á·¥Ö ·¥õ ú·¥á  ô·¥ú·¥õ·¥õ·¥è…¥ …™ ·¥°…™ ü ü ·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥õ ú·¥á·¥ç`

‚ùÇ *Íú±·¥á·¥õ·¥ú·¥ò*
*·¥è…¥ ü è ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä*
‚ùÇ [·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥ÄÍú± ·¥Ä·¥Ö·¥ç…™…¥](https://t.me/{asau}?startgroup=new)
‚ùÇ [·¥Ä·¥Ö·¥Ö ·¥ç·¥á …™…¥ your ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥ÄÍú± ·¥Ä·¥Ö·¥ç…™…¥](https://t.me/{asau}?startgroup=new)
 
*·¥Ñ·¥è·¥ç·¥ç·¥ç·¥Ä…¥·¥ÖÍú±*
‚ùÇ /fsub channel username - `·¥õ·¥è ·¥õ·¥ú Ä…¥ ·¥è…¥ ·¥Ä…¥·¥Ö ùöúùöéùöùùöûùöô ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü.`

  üí°*·¥Ö·¥è ·¥õ ú…™Íú± “ì…™ ÄÍú±·¥õ...*
‚ùÇ /fsub - `·¥õ·¥è …¢·¥á·¥õ ·¥õ ú·¥á ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ Íú±·¥á·¥õ·¥õ…™…¥…¢Íú±.`

‚ùÇ /fsub disable - `·¥õ·¥è ·¥õ·¥ú Ä…¥ ·¥è“ì “ì·¥è Ä·¥Ñ·¥áÍú±·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á..`

  üí°`…™“ì  è·¥è·¥ú ·¥Ö…™Íú±·¥Ä ô ü·¥á “ìÍú±·¥ú ô`, ` è·¥è·¥ú …¥·¥á·¥á·¥Ö ·¥õ·¥è Íú±·¥á·¥õ ·¥Ä…¢·¥Ä…™…¥ “ì·¥è Ä ·¥°·¥è Ä·¥ã…™…¥…¢` /fsub channel username
  
‚ùÇ /fsub clear - `·¥õ·¥è ·¥ú…¥·¥ç·¥ú·¥õ·¥á ·¥Ä ü ü ·¥ç·¥á·¥ç ô·¥á ÄÍú± ·¥° ú·¥è ·¥ç·¥ú·¥õ·¥á·¥Ö  ô è ·¥ç·¥á.`
"""
__mod_name__ = "ùôµ-s·¥ú ô üí®"
